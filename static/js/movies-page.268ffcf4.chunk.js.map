{"version":3,"sources":["axios/index.js","components/MoviesList/MoviesList.jsx","components/Searchbar/Searchbar.jsx","pages/MoviesPage.js"],"names":["axios","defaults","baseURL","params","api_key","useStyles","createUseStyles","list","display","textAlign","listItem","listStyle","link","fontSize","textDecoration","color","linkActive","withRouter","movies","location","query","styles","className","map","title","name","id","to","pathname","routes","state","from","search","Searchbar","onSubmit","onChange","value","form","visuallyHidden","position","width","height","margin","padding","overflow","border","clip","htmlFor","type","props","useState","setValue","setMovies","isLoading","setIsLoading","toggleLoader","prevState","a","get","res","data","results","console","log","e","target","preventDefault","getMovies","MoviesList"],"mappings":"yIAAA,qBAKAA,IAAMC,SAASC,QAHE,+BAIjBF,IAAMC,SAASE,OAAS,CACtBC,QAJc,oCAODJ,MAAf,G,4GCNMK,EAAYC,YAAgB,CAChCC,KAAM,CACJC,QAAS,QACTC,UAAW,UAGbC,SAAU,CACRC,UAAW,QAGbC,KAAM,CACJC,SAAU,OACVC,eAAgB,OAChBC,MAAO,UACP,UAAW,CACTA,MAAO,YAIXC,WAAY,CACVD,MAAO,aA4BIE,eAxBI,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,SAAUC,EAAY,EAAZA,MAChCC,EAAShB,IACf,OACE,oBAAIiB,UAAWD,EAAOd,KAAtB,SACGW,EAAOK,KAAI,gBAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,KAAMC,EAAhB,EAAgBA,GAAhB,OACV,oBAAaJ,UAAWD,EAAOX,SAA/B,SACE,cAAC,IAAD,CACEY,UAAWD,EAAOT,KAClBe,GAAI,CACFC,SAAS,GAAD,OAAKC,IAAOX,OAAZ,YAAsBQ,GAC9BI,MAAO,CACLC,KAAMZ,EACNa,OAAQZ,IANd,SAUGI,GAAgBC,KAXZC,Y,0GCCFO,EAhCG,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,SAAUC,EAAsB,EAAtBA,SAAUC,EAAY,EAAZA,MAmBjCf,EAlBYf,YAAgB,CAChC+B,KAAM,CACJ7B,QAAS,QACTC,UAAW,UAGb6B,eAAgB,CACdC,SAAU,WACVC,MAAO,MACPC,OAAQ,MACRC,OAAQ,OACRC,QAAS,IACTC,SAAU,SACVC,OAAQ,IACRC,KAAM,kBAIKzC,GAEf,OACE,uBAAM6B,SAAUA,EAAUE,MAAOA,EAAOd,UAAWD,EAAOgB,KAA1D,UACE,wBAAOU,QAAQ,IAAf,UACE,sBAAMzB,UAAWD,EAAOiB,eAAxB,kCACA,uBAAOU,KAAK,OAAOtB,GAAG,IAAIU,MAAOA,EAAOD,SAAUA,OAEpD,wBAAQa,KAAK,SAAb,wB,gCC0BS/B,uBAhDI,SAACgC,GAAW,IAAD,EACFC,mBAAS,IADP,mBACrBd,EADqB,KACde,EADc,OAEAD,mBAAS,IAFT,mBAErBhC,EAFqB,KAEbkC,EAFa,OAGMF,oBAAS,GAHf,mBAGrBG,EAHqB,KAGVC,EAHU,KAKtBC,EAAe,WACnBD,GAAa,SAACE,GAAD,OAAgBA,MANH,4CAS5B,4BAAAC,EAAA,sEAEIF,IAFJ,SAGsBvD,IAAM0D,IAAN,+BAAkCtB,IAHxD,OAGUuB,EAHV,OAIIP,EAAUO,EAAIC,KAAKC,SAJvB,gDAMIC,QAAQC,IAAR,MANJ,yBAQIR,IARJ,6EAT4B,sBA+B5B,OACE,qCACE,cAAC,EAAD,CACEpB,SAPe,SAAC6B,GACpBb,EAASa,EAAEC,OAAO7B,QAOdF,SAde,SAAC8B,GACpBA,EAAEE,iBAtBwB,mCAuB1BC,GACAhB,EAAS,KAYLf,MAAOA,IAGRiB,EACC,cAAC,IAAD,CAAQL,KAAK,OAAOjC,MAAM,UAAU0B,OAAQ,GAAID,MAAO,KAEvD,cAAC4B,EAAA,EAAD,CAAYlD,OAAQA,EAAQE,MAAOgB","file":"static/js/movies-page.268ffcf4.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst BASE_URL = \"https://api.themoviedb.org/3\";\r\nconst API_KEY = \"832bed4351187ecd0cb4c74b91000f85\";\r\n\r\naxios.defaults.baseURL = BASE_URL;\r\naxios.defaults.params = {\r\n  api_key: API_KEY,\r\n};\r\n\r\nexport default axios;\r\n","import { Link, withRouter } from \"react-router-dom\";\r\nimport routes from \"../../routes\";\r\nimport { createUseStyles } from \"react-jss\";\r\n\r\nconst useStyles = createUseStyles({\r\n  list: {\r\n    display: \"block\",\r\n    textAlign: \"center\",\r\n  },\r\n\r\n  listItem: {\r\n    listStyle: \"none\",\r\n  },\r\n\r\n  link: {\r\n    fontSize: \"24px\",\r\n    textDecoration: \"none\",\r\n    color: \"#049C95\",\r\n    \"&:hover\": {\r\n      color: \"#8801D2\",\r\n    },\r\n  },\r\n\r\n  linkActive: {\r\n    color: \"#8801D2\",\r\n  },\r\n});\r\n\r\nconst MoviesList = ({ movies, location, query }) => {\r\n  const styles = useStyles();\r\n  return (\r\n    <ul className={styles.list}>\r\n      {movies.map(({ title, name, id }) => (\r\n        <li key={id} className={styles.listItem}>\r\n          <Link\r\n            className={styles.link}\r\n            to={{\r\n              pathname: `${routes.movies}/${id}`,\r\n              state: {\r\n                from: location,\r\n                search: query,\r\n              },\r\n            }}\r\n          >\r\n            {title ? title : name}\r\n          </Link>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default withRouter(MoviesList);\r\n","import { createUseStyles } from \"react-jss\";\r\n\r\nconst Searchbar = ({ onSubmit, onChange, value }) => {\r\n  const useStyles = createUseStyles({\r\n    form: {\r\n      display: \"block\",\r\n      textAlign: \"center\",\r\n    },\r\n\r\n    visuallyHidden: {\r\n      position: \"absolute\",\r\n      width: \"1px\",\r\n      height: \"1px\",\r\n      margin: \"-1px\",\r\n      padding: \"0\",\r\n      overflow: \"hidden\",\r\n      border: \"0\",\r\n      clip: \"rect(0 0 0 0)\",\r\n    },\r\n  });\r\n\r\n  const styles = useStyles();\r\n\r\n  return (\r\n    <form onSubmit={onSubmit} value={value} className={styles.form}>\r\n      <label htmlFor=\"1\">\r\n        <span className={styles.visuallyHidden}>Enter the film title</span>\r\n        <input type=\"text\" id=\"1\" value={value} onChange={onChange}></input>\r\n      </label>\r\n      <button type=\"submit\">Search</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Searchbar;\r\n","import { useState } from \"react\";\r\nimport axios from \"../axios\";\r\nimport Searchbar from \"../components/Searchbar\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport MoviesList from \"../components/MoviesList\";\r\n\r\nconst MoviesPage = (props) => {\r\n  const [value, setValue] = useState(\"\");\r\n  const [movies, setMovies] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const toggleLoader = () => {\r\n    setIsLoading((prevState) => !prevState);\r\n  };\r\n\r\n  async function getMovies() {\r\n    try {\r\n      toggleLoader();\r\n      const res = await axios.get(`/search/movie?&query=${value}`);\r\n      setMovies(res.data.results);\r\n    } catch (error) {\r\n      console.log(error);\r\n    } finally {\r\n      toggleLoader();\r\n    }\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    getMovies();\r\n    setValue(\"\");\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    setValue(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Searchbar\r\n        onChange={handleChange}\r\n        onSubmit={handleSubmit}\r\n        value={value}\r\n      />\r\n\r\n      {isLoading ? (\r\n        <Loader type=\"Oval\" color=\"#00BFFF\" height={80} width={80} />\r\n      ) : (\r\n        <MoviesList movies={movies} query={value} />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default withRouter(MoviesPage);\r\n"],"sourceRoot":""}